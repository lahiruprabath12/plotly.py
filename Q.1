import numpy as np
import plotly.graph_objects as go


o_e = np.array([0, 0, 0])
o_e_prime = np.array([1.5, 0.5, 1])

axes = {
    "e": {"origin": o_e, "directions": [np.array([1, 0, 0]), np.array([0, 1, 0]), np.array([0, 0, 1])]},
    "e'": {"origin": o_e_prime, "directions": [o_e_prime + np.array([1, 0, 0]),
                                               o_e_prime + np.array([0, 1, 0]),
                                               o_e_prime + np.array([0, 0, 1])]}
}


fig = go.Figure()


colors = ['red', 'yellow', 'orange']
labels = ['e₁', 'e₂', 'e₃']
for i, (axis, color, label) in enumerate(zip(axes['e']['directions'], colors, labels)):
    fig.add_trace(go.Scatter3d(
        x=[o_e[0], axis[0]],
        y=[o_e[1], axis[1]],
        z=[o_e[2], axis[2]],
        mode='lines+text',
        line=dict(color=color, width=6),
        text=["", label],
        textposition='top center',
        name=f'e_{i+1}'
    ))


labels_prime = ["e'₁", "e'₂", "e'₃"]
for i, (axis, color, label) in enumerate(zip(axes['e\'']['directions'], colors, labels_prime)):
    fig.add_trace(go.Scatter3d(
        x=[o_e_prime[0], axis[0]],
        y=[o_e_prime[1], axis[1]],
        z=[o_e_prime[2], axis[2]],
        mode='lines+text',
        line=dict(color=color, width=4, dash='dash'),
        text=["", label],
        textposition='top center',
        name=f"e'_{i+1}"
    ))


fig.add_trace(go.Scatter3d(
    x=[o_e[0]], y=[o_e[1]], z=[o_e[2]],
    mode='markers+text',
    marker=dict(color='black', size=7),
    text=["Origin e"],
    textposition='bottom right',
    name='Origin e'
))
fig.add_trace(go.Scatter3d(
    x=[o_e_prime[0]], y=[o_e_prime[1]], z=[o_e_prime[2]],
    mode='markers+text',
    marker=dict(color='black', size=7),
    text=["Origin e'"],
    textposition='bottom right',
    name="Origin e'"
))


fig.update_layout(
    title='Orthonormal Frames: e and e\'',
    scene=dict(
        xaxis_title='e₁ / e\'₁',
        yaxis_title='e₂ / e\'₂',
        zaxis_title='e₃ / e\'₃',
        xaxis=dict(showbackground=True, backgroundcolor='rgb(230, 230, 230)', gridcolor='black'),
        yaxis=dict(showbackground=True, backgroundcolor='rgb(230, 230, 230)', gridcolor='black'),
        zaxis=dict(showbackground=True, backgroundcolor='rgb(230, 230, 230)', gridcolor='black'),
        aspectratio=dict(x=1, y=1, z=1),
    ),
    margin=dict(l=0, r=0, b=0, t=40),
    legend=dict(
        x=0.8, y=0.9,
        bgcolor='rgba(255, 255, 255, 0.5)'
    )
)

fig.show()
